
(function($){
    var game = new Phaser.Game(960, 600, Phaser.AUTO, 'gamecontainer', { preload: preload, create: create, update: update });
    var spaceship;
    var asteroid;
    var bullet;
    var bullets;
    var fireButton;
    var bulletTime = 0;
    var asteroidXPath;
    var asteroidYPath;

    function preload() {
        game.load.image('spaceship', '<%= image_path('spaceship.png') %>');
        game.load.image('bullet', '<%= image_path('torpedo2.png') %>');
        game.load.image('asteroid', '<%= image_path('asteroids_demo.png') %>');
        game.load.spritesheet('asteroidExplosion', '<%= image_path('explosion_sprite_sheet.png') %>');
    }

    function create() {
        // Add spaceship to the game
        spaceship = game.add.sprite(game.world.width/2, game.world.height - 100, 'spaceship');
        //  Enable physics on the spaceship
        game.physics.arcade.enable(spaceship);

        //  move the ship left and right
        spaceship.animations.add('left', [0, 1, 2, 3], 10, true);
        spaceship.animations.add('right', [5, 6, 7, 8], 10, true);

        //  Our bullet group
        bullets = game.add.group();
        bullets.enableBody = true;
        bullets.physicsBodyType = Phaser.Physics.ARCADE;
        bullets.createMultiple(30, 'bullet');
        bullets.setAll('anchor.x', 0.5);
        bullets.setAll('anchor.y', 1);
        bullets.setAll('outOfBoundsKill', true);
        bullets.setAll('checkWorldBounds', true);
        
        // Asteroids
        // Add asteroid to the game
        asteroid = game.add.sprite(50,50, 'asteroid');
        
        // Enable physics on the asteroid
        game.physics.arcade.enable(asteroid);
        
        // Set the path of the asteroid
        asteroidXPath = spaceship.world.x;
        asteroidYPath = spaceship.world.y;
        
        // Setup spacebar as fire button
        fireButton = game.input.keyboard.addKey(Phaser.Keyboard.SPACEBAR);
    }

    function update() {
        
        // Get asteroids moving
        game.physics.arcade.moveToXY(asteroid, asteroidXPath, asteroidYPath + 150, 100);
        
        // Setup collisions
        game.physics.arcade.collide(asteroid, bullet, bulletHitAsteroid);
        game.physics.arcade.collide(asteroid, spaceship, asteroidHitSpaceship);
        
        
        var cursors = game.input.keyboard.createCursorKeys();
        //  Reset the players velocity (movement)
        spaceship.body.velocity.x = 0;

        if (cursors.left.isDown)
        {
            //  Move to the left
            spaceship.body.velocity.x = -150;

            spaceship.animations.play('left');
        }
        else if (cursors.right.isDown)
        {
            //  Move to the right
            spaceship.body.velocity.x = 150;

            spaceship.animations.play('right');
        }
        else
        {
            //  Stand still
            spaceship.animations.stop();

            spaceship.frame = 4;
        }

        //  Firing?
        if (fireButton.isDown)
        {
            fireBullet();
        }

        function fireBullet () {

            //  To avoid them being allowed to fire too fast we set a time limit
            if (game.time.now > bulletTime)
            {
                //  Grab the first bullet we can from the pool
                bullet = bullets.getFirstExists(false);

                if (bullet)
                {
                    //  And fire it
                    bullet.reset(spaceship.x + 30, spaceship.y + 8);
                    bullet.body.velocity.y = -400;
                    bulletTime = game.time.now + 200;
                }
            }

        }

        function resetBullet (bullet) {

            //  Called if the bullet goes out of the screen
            bullet.kill();

        }
        
        function bulletHitAsteroid() {
            
            // kill asteroid
            asteroid.kill();
            
            // kill bullet
            bullet.kill();
        }
        
        function asteroidHitSpaceship() {
            
            // kill asteroid
            asteroid.kill();
            
            // kill spaceship
            spaceship.kill();
        }
        
        
        
        
        
        
    }
})(jQuery);
